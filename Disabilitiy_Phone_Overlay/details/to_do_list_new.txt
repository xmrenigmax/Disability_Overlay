1. Text Enhancement Features
    - Add WordNet integration for thesaurus/dictionary ✅
    - Create popup UI for word definitions             ✅
    - Add synonyms display                             ✅
    - Update text_processor.py                         ✅

2. Filter uses.
    - remove prophanic language from scans, and uses "****" instead.
    - remove camera "capture" button and implement mouse or touch screen to click and hold words
        - after selection would pop up with options to:
            - a) change size of text
            - b) copy to clipboard
            - c) use thesaurus
            - d) use dictionary
            - e) change text colour or background colour of text
            - f) translate text -> upon click does dropdown box of Languages

3. Camera Filter System
    - replace button "filters" on camera screen with a filter popup menu with 3 sections:
        - Saved Filters (requires database)
        - Customize Filters
        - History View
    - Add filter state persistence
    - Update camera_screen.py

4. App Overlay Feature
    - Create new OverlayScreen class
    - Add platform-specific overlay handling
    - Implement transparency
    - Share filter/text functionality with camera
    - cites sauces to fact check information scanned, and used to solve basic questions.

5. Settings Implementation
    - Create settings_screen.py
    - Add UI customization options
    - Add data management (clear history, etc)
    - Add settings persistence
    - account removal, deletion or authentication checking.

6. User Authentication
    - Create auth_manager.py
    - Add OAuth integration for email providers
    - Create user profile system
    - Add cloud sync functionality
    - Implement secure storage

7. Cross-Platform Deployment
    - Configure buildozer for Android APK
    - Set up iOS certificates and provisioning
    - Create Windows installer
    - Add platform-specific optimizations

8. apk and monitisation / perks
    - apk design, beautify it and make it look appealing
    - add advertisments which based on users cookies
    - add a vip button which is used to remove ads if they pay £4.99.

9. Ensure standard reaches google / steam / apple store guidelines and standard


hierachy:

project_root/
├── src/
│   ├── auth/                    # Authentication system
│   │   ├── __init__.py
│   │   ├── auth_manager.py      # User authentication handling
│   │   ├── profile.py          # User profile management
│   │   ├── storage.py          # Secure data storage
│   │   └── oauth.py            # OAuth implementation (New)
│   │
│   ├── database/               # Data persistence
│   │   ├── __init__.py
│   │   ├── models.py           # Database models
│   │   ├── history.py          # History tracking
│   │   ├── filter_store.py     # Filter persistence
│   │   └── cache.py           # Cache management (New)
│   │
│   ├── features/              # Core features
│   │   ├── __init__.py
│   │   ├── text_processor.py   # Text processing
│   │   ├── translation.py      # Translation services
│   │   ├── accessibility.py    # Accessibility features
│   │   └── profanity.py       # Profanity filter (New)
│   │
│   ├── monetization/          # Monetization system (New)
│   │   ├── __init__.py
│   │   ├── ads_manager.py     # Advertisement handling
│   │   ├── premium.py         # Premium features
│   │   └── payments.py        # Payment processing
│   │
│   ├── overlay/               # App overlay feature
│   │   ├── __init__.py
│   │   ├── overlay_screen.py  # Overlay UI
│   │   └── platform_handler.py # Platform-specific overlay
│   │
│   ├── settings/              # Settings management
│   │   ├── __init__.py
│   │   ├── settings_screen.py # Settings UI
│   │   └── preferences.py     # User preferences
│   │
│   ├── ui/                    # UI components
│   │   ├── __init__.py
│   │   ├── popups.py         # Popup dialogs
│   │   ├── widgets.py        # Custom widgets
│   │   └── themes.py         # UI themes
│   │
│   └── store/                # App store compliance (New)
       ├── __init__.py
       ├── google_play.py     # Google Play requirements
       ├── app_store.py       # Apple Store requirements
       └── microsoft.py       # Microsoft Store requirements

├── tests/                    # Test suite
├── docs/                     # Documentation
├── build/                    # Build configurations
└── main.py                  # Application entry point